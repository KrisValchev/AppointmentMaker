// <auto-generated />
using System;
using AppointmentMaker.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentMaker.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250511084340_DescriptionCanBeNull")]
    partial class DescriptionCanBeNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppointmentMaker.Infrastructure.Data.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Appointment identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BarberId")
                        .HasColumnType("int")
                        .HasComment("Barber identifier");

                    b.Property<string>("ClientNames")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Client's names");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("Appointment date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Appointment description");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Client's phone number");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2")
                        .HasComment("Appointment time");

                    b.HasKey("Id");

                    b.HasIndex("BarberId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarberId = 1,
                            ClientNames = "Petar Ivanov",
                            Date = new DateTime(2025, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            PhoneNumber = "0871234567",
                            Time = new DateTime(2025, 5, 11, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BarberId = 1,
                            ClientNames = "Mihail Dimitrov",
                            Date = new DateTime(2025, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            PhoneNumber = "0870000000",
                            Time = new DateTime(2025, 5, 11, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AppointmentMaker.Infrastructure.Data.Models.Barber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Barber identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BarberName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Barber's name");

                    b.HasKey("Id");

                    b.HasIndex("BarberName")
                        .IsUnique();

                    b.ToTable("Barbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BarberName = "Denis"
                        });
                });

            modelBuilder.Entity("AppointmentMaker.Infrastructure.Data.Models.Appointment", b =>
                {
                    b.HasOne("AppointmentMaker.Infrastructure.Data.Models.Barber", "Barber")
                        .WithMany()
                        .HasForeignKey("BarberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barber");
                });
#pragma warning restore 612, 618
        }
    }
}
